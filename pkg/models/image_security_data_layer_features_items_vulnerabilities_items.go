// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ImageSecurityDataLayerFeaturesItemsVulnerabilitiesItems image security data layer features items vulnerabilities items
// swagger:model imageSecurityDataLayerFeaturesItemsVulnerabilitiesItems
type ImageSecurityDataLayerFeaturesItemsVulnerabilitiesItems struct {

	// fixed by
	FixedBy string `json:"FixedBy,omitempty"`

	// link
	Link string `json:"Link,omitempty"`

	// metadata
	Metadata *ImageSecurityDataLayerFeaturesItemsVulnerabilitiesItemsMetadata `json:"Metadata,omitempty"`

	// name
	Name string `json:"Name,omitempty"`

	// namespace name
	NamespaceName string `json:"NamespaceName,omitempty"`

	// severity
	Severity string `json:"Severity,omitempty"`
}

// Validate validates this image security data layer features items vulnerabilities items
func (m *ImageSecurityDataLayerFeaturesItemsVulnerabilitiesItems) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMetadata(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ImageSecurityDataLayerFeaturesItemsVulnerabilitiesItems) validateMetadata(formats strfmt.Registry) error {

	if swag.IsZero(m.Metadata) { // not required
		return nil
	}

	if m.Metadata != nil {

		if err := m.Metadata.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("Metadata")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ImageSecurityDataLayerFeaturesItemsVulnerabilitiesItems) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ImageSecurityDataLayerFeaturesItemsVulnerabilitiesItems) UnmarshalBinary(b []byte) error {
	var res ImageSecurityDataLayerFeaturesItemsVulnerabilitiesItems
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
