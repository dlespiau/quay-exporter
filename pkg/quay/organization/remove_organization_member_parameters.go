// Code generated by go-swagger; DO NOT EDIT.

package organization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewRemoveOrganizationMemberParams creates a new RemoveOrganizationMemberParams object
// with the default values initialized.
func NewRemoveOrganizationMemberParams() *RemoveOrganizationMemberParams {
	var ()
	return &RemoveOrganizationMemberParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewRemoveOrganizationMemberParamsWithTimeout creates a new RemoveOrganizationMemberParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewRemoveOrganizationMemberParamsWithTimeout(timeout time.Duration) *RemoveOrganizationMemberParams {
	var ()
	return &RemoveOrganizationMemberParams{

		timeout: timeout,
	}
}

// NewRemoveOrganizationMemberParamsWithContext creates a new RemoveOrganizationMemberParams object
// with the default values initialized, and the ability to set a context for a request
func NewRemoveOrganizationMemberParamsWithContext(ctx context.Context) *RemoveOrganizationMemberParams {
	var ()
	return &RemoveOrganizationMemberParams{

		Context: ctx,
	}
}

// NewRemoveOrganizationMemberParamsWithHTTPClient creates a new RemoveOrganizationMemberParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewRemoveOrganizationMemberParamsWithHTTPClient(client *http.Client) *RemoveOrganizationMemberParams {
	var ()
	return &RemoveOrganizationMemberParams{
		HTTPClient: client,
	}
}

/*RemoveOrganizationMemberParams contains all the parameters to send to the API endpoint
for the remove organization member operation typically these are written to a http.Request
*/
type RemoveOrganizationMemberParams struct {

	/*Membername
	  The username of the organization member

	*/
	Membername string
	/*Orgname
	  The name of the organization

	*/
	Orgname string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the remove organization member params
func (o *RemoveOrganizationMemberParams) WithTimeout(timeout time.Duration) *RemoveOrganizationMemberParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the remove organization member params
func (o *RemoveOrganizationMemberParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the remove organization member params
func (o *RemoveOrganizationMemberParams) WithContext(ctx context.Context) *RemoveOrganizationMemberParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the remove organization member params
func (o *RemoveOrganizationMemberParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the remove organization member params
func (o *RemoveOrganizationMemberParams) WithHTTPClient(client *http.Client) *RemoveOrganizationMemberParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the remove organization member params
func (o *RemoveOrganizationMemberParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithMembername adds the membername to the remove organization member params
func (o *RemoveOrganizationMemberParams) WithMembername(membername string) *RemoveOrganizationMemberParams {
	o.SetMembername(membername)
	return o
}

// SetMembername adds the membername to the remove organization member params
func (o *RemoveOrganizationMemberParams) SetMembername(membername string) {
	o.Membername = membername
}

// WithOrgname adds the orgname to the remove organization member params
func (o *RemoveOrganizationMemberParams) WithOrgname(orgname string) *RemoveOrganizationMemberParams {
	o.SetOrgname(orgname)
	return o
}

// SetOrgname adds the orgname to the remove organization member params
func (o *RemoveOrganizationMemberParams) SetOrgname(orgname string) {
	o.Orgname = orgname
}

// WriteToRequest writes these params to a swagger request
func (o *RemoveOrganizationMemberParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param membername
	if err := r.SetPathParam("membername", o.Membername); err != nil {
		return err
	}

	// path param orgname
	if err := r.SetPathParam("orgname", o.Orgname); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
