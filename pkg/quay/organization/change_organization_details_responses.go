// Code generated by go-swagger; DO NOT EDIT.

package organization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/dlespiau/quay-exporter/pkg/models"
)

// ChangeOrganizationDetailsReader is a Reader for the ChangeOrganizationDetails structure.
type ChangeOrganizationDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ChangeOrganizationDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewChangeOrganizationDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewChangeOrganizationDetailsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewChangeOrganizationDetailsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewChangeOrganizationDetailsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewChangeOrganizationDetailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewChangeOrganizationDetailsOK creates a ChangeOrganizationDetailsOK with default headers values
func NewChangeOrganizationDetailsOK() *ChangeOrganizationDetailsOK {
	return &ChangeOrganizationDetailsOK{}
}

/*ChangeOrganizationDetailsOK handles this case with default header values.

Successful invocation
*/
type ChangeOrganizationDetailsOK struct {
}

func (o *ChangeOrganizationDetailsOK) Error() string {
	return fmt.Sprintf("[PUT /api/v1/organization/{orgname}][%d] changeOrganizationDetailsOK ", 200)
}

func (o *ChangeOrganizationDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewChangeOrganizationDetailsBadRequest creates a ChangeOrganizationDetailsBadRequest with default headers values
func NewChangeOrganizationDetailsBadRequest() *ChangeOrganizationDetailsBadRequest {
	return &ChangeOrganizationDetailsBadRequest{}
}

/*ChangeOrganizationDetailsBadRequest handles this case with default header values.

Bad Request
*/
type ChangeOrganizationDetailsBadRequest struct {
	Payload *models.APIError
}

func (o *ChangeOrganizationDetailsBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v1/organization/{orgname}][%d] changeOrganizationDetailsBadRequest  %+v", 400, o.Payload)
}

func (o *ChangeOrganizationDetailsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChangeOrganizationDetailsUnauthorized creates a ChangeOrganizationDetailsUnauthorized with default headers values
func NewChangeOrganizationDetailsUnauthorized() *ChangeOrganizationDetailsUnauthorized {
	return &ChangeOrganizationDetailsUnauthorized{}
}

/*ChangeOrganizationDetailsUnauthorized handles this case with default header values.

Session required
*/
type ChangeOrganizationDetailsUnauthorized struct {
	Payload *models.APIError
}

func (o *ChangeOrganizationDetailsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v1/organization/{orgname}][%d] changeOrganizationDetailsUnauthorized  %+v", 401, o.Payload)
}

func (o *ChangeOrganizationDetailsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChangeOrganizationDetailsForbidden creates a ChangeOrganizationDetailsForbidden with default headers values
func NewChangeOrganizationDetailsForbidden() *ChangeOrganizationDetailsForbidden {
	return &ChangeOrganizationDetailsForbidden{}
}

/*ChangeOrganizationDetailsForbidden handles this case with default header values.

Unauthorized access
*/
type ChangeOrganizationDetailsForbidden struct {
	Payload *models.APIError
}

func (o *ChangeOrganizationDetailsForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v1/organization/{orgname}][%d] changeOrganizationDetailsForbidden  %+v", 403, o.Payload)
}

func (o *ChangeOrganizationDetailsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChangeOrganizationDetailsNotFound creates a ChangeOrganizationDetailsNotFound with default headers values
func NewChangeOrganizationDetailsNotFound() *ChangeOrganizationDetailsNotFound {
	return &ChangeOrganizationDetailsNotFound{}
}

/*ChangeOrganizationDetailsNotFound handles this case with default header values.

Not found
*/
type ChangeOrganizationDetailsNotFound struct {
	Payload *models.APIError
}

func (o *ChangeOrganizationDetailsNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v1/organization/{orgname}][%d] changeOrganizationDetailsNotFound  %+v", 404, o.Payload)
}

func (o *ChangeOrganizationDetailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
