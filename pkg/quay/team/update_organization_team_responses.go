// Code generated by go-swagger; DO NOT EDIT.

package team

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/dlespiau/quay-exporter/pkg/models"
)

// UpdateOrganizationTeamReader is a Reader for the UpdateOrganizationTeam structure.
type UpdateOrganizationTeamReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateOrganizationTeamReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateOrganizationTeamOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUpdateOrganizationTeamBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewUpdateOrganizationTeamUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewUpdateOrganizationTeamForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewUpdateOrganizationTeamNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateOrganizationTeamOK creates a UpdateOrganizationTeamOK with default headers values
func NewUpdateOrganizationTeamOK() *UpdateOrganizationTeamOK {
	return &UpdateOrganizationTeamOK{}
}

/*UpdateOrganizationTeamOK handles this case with default header values.

Successful invocation
*/
type UpdateOrganizationTeamOK struct {
}

func (o *UpdateOrganizationTeamOK) Error() string {
	return fmt.Sprintf("[PUT /api/v1/organization/{orgname}/team/{teamname}][%d] updateOrganizationTeamOK ", 200)
}

func (o *UpdateOrganizationTeamOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateOrganizationTeamBadRequest creates a UpdateOrganizationTeamBadRequest with default headers values
func NewUpdateOrganizationTeamBadRequest() *UpdateOrganizationTeamBadRequest {
	return &UpdateOrganizationTeamBadRequest{}
}

/*UpdateOrganizationTeamBadRequest handles this case with default header values.

Bad Request
*/
type UpdateOrganizationTeamBadRequest struct {
	Payload *models.APIError
}

func (o *UpdateOrganizationTeamBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v1/organization/{orgname}/team/{teamname}][%d] updateOrganizationTeamBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateOrganizationTeamBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOrganizationTeamUnauthorized creates a UpdateOrganizationTeamUnauthorized with default headers values
func NewUpdateOrganizationTeamUnauthorized() *UpdateOrganizationTeamUnauthorized {
	return &UpdateOrganizationTeamUnauthorized{}
}

/*UpdateOrganizationTeamUnauthorized handles this case with default header values.

Session required
*/
type UpdateOrganizationTeamUnauthorized struct {
	Payload *models.APIError
}

func (o *UpdateOrganizationTeamUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v1/organization/{orgname}/team/{teamname}][%d] updateOrganizationTeamUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateOrganizationTeamUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOrganizationTeamForbidden creates a UpdateOrganizationTeamForbidden with default headers values
func NewUpdateOrganizationTeamForbidden() *UpdateOrganizationTeamForbidden {
	return &UpdateOrganizationTeamForbidden{}
}

/*UpdateOrganizationTeamForbidden handles this case with default header values.

Unauthorized access
*/
type UpdateOrganizationTeamForbidden struct {
	Payload *models.APIError
}

func (o *UpdateOrganizationTeamForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v1/organization/{orgname}/team/{teamname}][%d] updateOrganizationTeamForbidden  %+v", 403, o.Payload)
}

func (o *UpdateOrganizationTeamForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOrganizationTeamNotFound creates a UpdateOrganizationTeamNotFound with default headers values
func NewUpdateOrganizationTeamNotFound() *UpdateOrganizationTeamNotFound {
	return &UpdateOrganizationTeamNotFound{}
}

/*UpdateOrganizationTeamNotFound handles this case with default header values.

Not found
*/
type UpdateOrganizationTeamNotFound struct {
	Payload *models.APIError
}

func (o *UpdateOrganizationTeamNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v1/organization/{orgname}/team/{teamname}][%d] updateOrganizationTeamNotFound  %+v", 404, o.Payload)
}

func (o *UpdateOrganizationTeamNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
