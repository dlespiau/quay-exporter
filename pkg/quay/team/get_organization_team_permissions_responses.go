// Code generated by go-swagger; DO NOT EDIT.

package team

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/dlespiau/quay-exporter/pkg/models"
)

// GetOrganizationTeamPermissionsReader is a Reader for the GetOrganizationTeamPermissions structure.
type GetOrganizationTeamPermissionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrganizationTeamPermissionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetOrganizationTeamPermissionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetOrganizationTeamPermissionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetOrganizationTeamPermissionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetOrganizationTeamPermissionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetOrganizationTeamPermissionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetOrganizationTeamPermissionsOK creates a GetOrganizationTeamPermissionsOK with default headers values
func NewGetOrganizationTeamPermissionsOK() *GetOrganizationTeamPermissionsOK {
	return &GetOrganizationTeamPermissionsOK{}
}

/*GetOrganizationTeamPermissionsOK handles this case with default header values.

Successful invocation
*/
type GetOrganizationTeamPermissionsOK struct {
}

func (o *GetOrganizationTeamPermissionsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/organization/{orgname}/team/{teamname}/permissions][%d] getOrganizationTeamPermissionsOK ", 200)
}

func (o *GetOrganizationTeamPermissionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrganizationTeamPermissionsBadRequest creates a GetOrganizationTeamPermissionsBadRequest with default headers values
func NewGetOrganizationTeamPermissionsBadRequest() *GetOrganizationTeamPermissionsBadRequest {
	return &GetOrganizationTeamPermissionsBadRequest{}
}

/*GetOrganizationTeamPermissionsBadRequest handles this case with default header values.

Bad Request
*/
type GetOrganizationTeamPermissionsBadRequest struct {
	Payload *models.APIError
}

func (o *GetOrganizationTeamPermissionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1/organization/{orgname}/team/{teamname}/permissions][%d] getOrganizationTeamPermissionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetOrganizationTeamPermissionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationTeamPermissionsUnauthorized creates a GetOrganizationTeamPermissionsUnauthorized with default headers values
func NewGetOrganizationTeamPermissionsUnauthorized() *GetOrganizationTeamPermissionsUnauthorized {
	return &GetOrganizationTeamPermissionsUnauthorized{}
}

/*GetOrganizationTeamPermissionsUnauthorized handles this case with default header values.

Session required
*/
type GetOrganizationTeamPermissionsUnauthorized struct {
	Payload *models.APIError
}

func (o *GetOrganizationTeamPermissionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/organization/{orgname}/team/{teamname}/permissions][%d] getOrganizationTeamPermissionsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOrganizationTeamPermissionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationTeamPermissionsForbidden creates a GetOrganizationTeamPermissionsForbidden with default headers values
func NewGetOrganizationTeamPermissionsForbidden() *GetOrganizationTeamPermissionsForbidden {
	return &GetOrganizationTeamPermissionsForbidden{}
}

/*GetOrganizationTeamPermissionsForbidden handles this case with default header values.

Unauthorized access
*/
type GetOrganizationTeamPermissionsForbidden struct {
	Payload *models.APIError
}

func (o *GetOrganizationTeamPermissionsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/organization/{orgname}/team/{teamname}/permissions][%d] getOrganizationTeamPermissionsForbidden  %+v", 403, o.Payload)
}

func (o *GetOrganizationTeamPermissionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationTeamPermissionsNotFound creates a GetOrganizationTeamPermissionsNotFound with default headers values
func NewGetOrganizationTeamPermissionsNotFound() *GetOrganizationTeamPermissionsNotFound {
	return &GetOrganizationTeamPermissionsNotFound{}
}

/*GetOrganizationTeamPermissionsNotFound handles this case with default header values.

Not found
*/
type GetOrganizationTeamPermissionsNotFound struct {
	Payload *models.APIError
}

func (o *GetOrganizationTeamPermissionsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/organization/{orgname}/team/{teamname}/permissions][%d] getOrganizationTeamPermissionsNotFound  %+v", 404, o.Payload)
}

func (o *GetOrganizationTeamPermissionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
