// Code generated by go-swagger; DO NOT EDIT.

package permission

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/dlespiau/quay-exporter/pkg/models"
)

// ChangeTeamPermissionsReader is a Reader for the ChangeTeamPermissions structure.
type ChangeTeamPermissionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ChangeTeamPermissionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewChangeTeamPermissionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewChangeTeamPermissionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewChangeTeamPermissionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewChangeTeamPermissionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewChangeTeamPermissionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewChangeTeamPermissionsOK creates a ChangeTeamPermissionsOK with default headers values
func NewChangeTeamPermissionsOK() *ChangeTeamPermissionsOK {
	return &ChangeTeamPermissionsOK{}
}

/*ChangeTeamPermissionsOK handles this case with default header values.

Successful invocation
*/
type ChangeTeamPermissionsOK struct {
}

func (o *ChangeTeamPermissionsOK) Error() string {
	return fmt.Sprintf("[PUT /api/v1/repository/{repository}/permissions/team/{teamname}][%d] changeTeamPermissionsOK ", 200)
}

func (o *ChangeTeamPermissionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewChangeTeamPermissionsBadRequest creates a ChangeTeamPermissionsBadRequest with default headers values
func NewChangeTeamPermissionsBadRequest() *ChangeTeamPermissionsBadRequest {
	return &ChangeTeamPermissionsBadRequest{}
}

/*ChangeTeamPermissionsBadRequest handles this case with default header values.

Bad Request
*/
type ChangeTeamPermissionsBadRequest struct {
	Payload *models.APIError
}

func (o *ChangeTeamPermissionsBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v1/repository/{repository}/permissions/team/{teamname}][%d] changeTeamPermissionsBadRequest  %+v", 400, o.Payload)
}

func (o *ChangeTeamPermissionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChangeTeamPermissionsUnauthorized creates a ChangeTeamPermissionsUnauthorized with default headers values
func NewChangeTeamPermissionsUnauthorized() *ChangeTeamPermissionsUnauthorized {
	return &ChangeTeamPermissionsUnauthorized{}
}

/*ChangeTeamPermissionsUnauthorized handles this case with default header values.

Session required
*/
type ChangeTeamPermissionsUnauthorized struct {
	Payload *models.APIError
}

func (o *ChangeTeamPermissionsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v1/repository/{repository}/permissions/team/{teamname}][%d] changeTeamPermissionsUnauthorized  %+v", 401, o.Payload)
}

func (o *ChangeTeamPermissionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChangeTeamPermissionsForbidden creates a ChangeTeamPermissionsForbidden with default headers values
func NewChangeTeamPermissionsForbidden() *ChangeTeamPermissionsForbidden {
	return &ChangeTeamPermissionsForbidden{}
}

/*ChangeTeamPermissionsForbidden handles this case with default header values.

Unauthorized access
*/
type ChangeTeamPermissionsForbidden struct {
	Payload *models.APIError
}

func (o *ChangeTeamPermissionsForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v1/repository/{repository}/permissions/team/{teamname}][%d] changeTeamPermissionsForbidden  %+v", 403, o.Payload)
}

func (o *ChangeTeamPermissionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChangeTeamPermissionsNotFound creates a ChangeTeamPermissionsNotFound with default headers values
func NewChangeTeamPermissionsNotFound() *ChangeTeamPermissionsNotFound {
	return &ChangeTeamPermissionsNotFound{}
}

/*ChangeTeamPermissionsNotFound handles this case with default header values.

Not found
*/
type ChangeTeamPermissionsNotFound struct {
	Payload *models.APIError
}

func (o *ChangeTeamPermissionsNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v1/repository/{repository}/permissions/team/{teamname}][%d] changeTeamPermissionsNotFound  %+v", 404, o.Payload)
}

func (o *ChangeTeamPermissionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
