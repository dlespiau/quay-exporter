// Code generated by go-swagger; DO NOT EDIT.

package logs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/dlespiau/quay-exporter/pkg/models"
)

// ListOrgLogsReader is a Reader for the ListOrgLogs structure.
type ListOrgLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListOrgLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListOrgLogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListOrgLogsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewListOrgLogsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListOrgLogsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListOrgLogsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListOrgLogsOK creates a ListOrgLogsOK with default headers values
func NewListOrgLogsOK() *ListOrgLogsOK {
	return &ListOrgLogsOK{}
}

/*ListOrgLogsOK handles this case with default header values.

Successful invocation
*/
type ListOrgLogsOK struct {
}

func (o *ListOrgLogsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/organization/{orgname}/logs][%d] listOrgLogsOK ", 200)
}

func (o *ListOrgLogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListOrgLogsBadRequest creates a ListOrgLogsBadRequest with default headers values
func NewListOrgLogsBadRequest() *ListOrgLogsBadRequest {
	return &ListOrgLogsBadRequest{}
}

/*ListOrgLogsBadRequest handles this case with default header values.

Bad Request
*/
type ListOrgLogsBadRequest struct {
	Payload *models.APIError
}

func (o *ListOrgLogsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1/organization/{orgname}/logs][%d] listOrgLogsBadRequest  %+v", 400, o.Payload)
}

func (o *ListOrgLogsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListOrgLogsUnauthorized creates a ListOrgLogsUnauthorized with default headers values
func NewListOrgLogsUnauthorized() *ListOrgLogsUnauthorized {
	return &ListOrgLogsUnauthorized{}
}

/*ListOrgLogsUnauthorized handles this case with default header values.

Session required
*/
type ListOrgLogsUnauthorized struct {
	Payload *models.APIError
}

func (o *ListOrgLogsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/organization/{orgname}/logs][%d] listOrgLogsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListOrgLogsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListOrgLogsForbidden creates a ListOrgLogsForbidden with default headers values
func NewListOrgLogsForbidden() *ListOrgLogsForbidden {
	return &ListOrgLogsForbidden{}
}

/*ListOrgLogsForbidden handles this case with default header values.

Unauthorized access
*/
type ListOrgLogsForbidden struct {
	Payload *models.APIError
}

func (o *ListOrgLogsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/organization/{orgname}/logs][%d] listOrgLogsForbidden  %+v", 403, o.Payload)
}

func (o *ListOrgLogsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListOrgLogsNotFound creates a ListOrgLogsNotFound with default headers values
func NewListOrgLogsNotFound() *ListOrgLogsNotFound {
	return &ListOrgLogsNotFound{}
}

/*ListOrgLogsNotFound handles this case with default header values.

Not found
*/
type ListOrgLogsNotFound struct {
	Payload *models.APIError
}

func (o *ListOrgLogsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/organization/{orgname}/logs][%d] listOrgLogsNotFound  %+v", 404, o.Payload)
}

func (o *ListOrgLogsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
