// Code generated by go-swagger; DO NOT EDIT.

package image

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/dlespiau/quay-exporter/pkg/models"
)

// ListRepositoryImagesReader is a Reader for the ListRepositoryImages structure.
type ListRepositoryImagesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListRepositoryImagesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListRepositoryImagesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListRepositoryImagesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewListRepositoryImagesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListRepositoryImagesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListRepositoryImagesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListRepositoryImagesOK creates a ListRepositoryImagesOK with default headers values
func NewListRepositoryImagesOK() *ListRepositoryImagesOK {
	return &ListRepositoryImagesOK{}
}

/*ListRepositoryImagesOK handles this case with default header values.

Successful invocation
*/
type ListRepositoryImagesOK struct {
}

func (o *ListRepositoryImagesOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/image/][%d] listRepositoryImagesOK ", 200)
}

func (o *ListRepositoryImagesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListRepositoryImagesBadRequest creates a ListRepositoryImagesBadRequest with default headers values
func NewListRepositoryImagesBadRequest() *ListRepositoryImagesBadRequest {
	return &ListRepositoryImagesBadRequest{}
}

/*ListRepositoryImagesBadRequest handles this case with default header values.

Bad Request
*/
type ListRepositoryImagesBadRequest struct {
	Payload *models.APIError
}

func (o *ListRepositoryImagesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/image/][%d] listRepositoryImagesBadRequest  %+v", 400, o.Payload)
}

func (o *ListRepositoryImagesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRepositoryImagesUnauthorized creates a ListRepositoryImagesUnauthorized with default headers values
func NewListRepositoryImagesUnauthorized() *ListRepositoryImagesUnauthorized {
	return &ListRepositoryImagesUnauthorized{}
}

/*ListRepositoryImagesUnauthorized handles this case with default header values.

Session required
*/
type ListRepositoryImagesUnauthorized struct {
	Payload *models.APIError
}

func (o *ListRepositoryImagesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/image/][%d] listRepositoryImagesUnauthorized  %+v", 401, o.Payload)
}

func (o *ListRepositoryImagesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRepositoryImagesForbidden creates a ListRepositoryImagesForbidden with default headers values
func NewListRepositoryImagesForbidden() *ListRepositoryImagesForbidden {
	return &ListRepositoryImagesForbidden{}
}

/*ListRepositoryImagesForbidden handles this case with default header values.

Unauthorized access
*/
type ListRepositoryImagesForbidden struct {
	Payload *models.APIError
}

func (o *ListRepositoryImagesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/image/][%d] listRepositoryImagesForbidden  %+v", 403, o.Payload)
}

func (o *ListRepositoryImagesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRepositoryImagesNotFound creates a ListRepositoryImagesNotFound with default headers values
func NewListRepositoryImagesNotFound() *ListRepositoryImagesNotFound {
	return &ListRepositoryImagesNotFound{}
}

/*ListRepositoryImagesNotFound handles this case with default header values.

Not found
*/
type ListRepositoryImagesNotFound struct {
	Payload *models.APIError
}

func (o *ListRepositoryImagesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/image/][%d] listRepositoryImagesNotFound  %+v", 404, o.Payload)
}

func (o *ListRepositoryImagesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
