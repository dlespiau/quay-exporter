// Code generated by go-swagger; DO NOT EDIT.

package manifest

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewListManifestLabelsParams creates a new ListManifestLabelsParams object
// with the default values initialized.
func NewListManifestLabelsParams() *ListManifestLabelsParams {
	var ()
	return &ListManifestLabelsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewListManifestLabelsParamsWithTimeout creates a new ListManifestLabelsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewListManifestLabelsParamsWithTimeout(timeout time.Duration) *ListManifestLabelsParams {
	var ()
	return &ListManifestLabelsParams{

		timeout: timeout,
	}
}

// NewListManifestLabelsParamsWithContext creates a new ListManifestLabelsParams object
// with the default values initialized, and the ability to set a context for a request
func NewListManifestLabelsParamsWithContext(ctx context.Context) *ListManifestLabelsParams {
	var ()
	return &ListManifestLabelsParams{

		Context: ctx,
	}
}

// NewListManifestLabelsParamsWithHTTPClient creates a new ListManifestLabelsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewListManifestLabelsParamsWithHTTPClient(client *http.Client) *ListManifestLabelsParams {
	var ()
	return &ListManifestLabelsParams{
		HTTPClient: client,
	}
}

/*ListManifestLabelsParams contains all the parameters to send to the API endpoint
for the list manifest labels operation typically these are written to a http.Request
*/
type ListManifestLabelsParams struct {

	/*Filter
	  If specified, only labels matching the given prefix will be returned

	*/
	Filter *string
	/*Manifestref
	  The digest of the manifest

	*/
	Manifestref string
	/*Repository
	  The full path of the repository. e.g. namespace/name

	*/
	Repository string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the list manifest labels params
func (o *ListManifestLabelsParams) WithTimeout(timeout time.Duration) *ListManifestLabelsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list manifest labels params
func (o *ListManifestLabelsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list manifest labels params
func (o *ListManifestLabelsParams) WithContext(ctx context.Context) *ListManifestLabelsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list manifest labels params
func (o *ListManifestLabelsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list manifest labels params
func (o *ListManifestLabelsParams) WithHTTPClient(client *http.Client) *ListManifestLabelsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list manifest labels params
func (o *ListManifestLabelsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFilter adds the filter to the list manifest labels params
func (o *ListManifestLabelsParams) WithFilter(filter *string) *ListManifestLabelsParams {
	o.SetFilter(filter)
	return o
}

// SetFilter adds the filter to the list manifest labels params
func (o *ListManifestLabelsParams) SetFilter(filter *string) {
	o.Filter = filter
}

// WithManifestref adds the manifestref to the list manifest labels params
func (o *ListManifestLabelsParams) WithManifestref(manifestref string) *ListManifestLabelsParams {
	o.SetManifestref(manifestref)
	return o
}

// SetManifestref adds the manifestref to the list manifest labels params
func (o *ListManifestLabelsParams) SetManifestref(manifestref string) {
	o.Manifestref = manifestref
}

// WithRepository adds the repository to the list manifest labels params
func (o *ListManifestLabelsParams) WithRepository(repository string) *ListManifestLabelsParams {
	o.SetRepository(repository)
	return o
}

// SetRepository adds the repository to the list manifest labels params
func (o *ListManifestLabelsParams) SetRepository(repository string) {
	o.Repository = repository
}

// WriteToRequest writes these params to a swagger request
func (o *ListManifestLabelsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Filter != nil {

		// query param filter
		var qrFilter string
		if o.Filter != nil {
			qrFilter = *o.Filter
		}
		qFilter := qrFilter
		if qFilter != "" {
			if err := r.SetQueryParam("filter", qFilter); err != nil {
				return err
			}
		}

	}

	// path param manifestref
	if err := r.SetPathParam("manifestref", o.Manifestref); err != nil {
		return err
	}

	// path param repository
	if err := r.SetPathParam("repository", o.Repository); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
