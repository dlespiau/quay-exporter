// Code generated by go-swagger; DO NOT EDIT.

package globalmessages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/dlespiau/quay-exporter/pkg/models"
)

// GetGlobalMessagesReader is a Reader for the GetGlobalMessages structure.
type GetGlobalMessagesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGlobalMessagesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetGlobalMessagesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetGlobalMessagesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetGlobalMessagesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetGlobalMessagesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetGlobalMessagesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetGlobalMessagesOK creates a GetGlobalMessagesOK with default headers values
func NewGetGlobalMessagesOK() *GetGlobalMessagesOK {
	return &GetGlobalMessagesOK{}
}

/*GetGlobalMessagesOK handles this case with default header values.

Successful invocation
*/
type GetGlobalMessagesOK struct {
}

func (o *GetGlobalMessagesOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/messages][%d] getGlobalMessagesOK ", 200)
}

func (o *GetGlobalMessagesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetGlobalMessagesBadRequest creates a GetGlobalMessagesBadRequest with default headers values
func NewGetGlobalMessagesBadRequest() *GetGlobalMessagesBadRequest {
	return &GetGlobalMessagesBadRequest{}
}

/*GetGlobalMessagesBadRequest handles this case with default header values.

Bad Request
*/
type GetGlobalMessagesBadRequest struct {
	Payload *models.APIError
}

func (o *GetGlobalMessagesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1/messages][%d] getGlobalMessagesBadRequest  %+v", 400, o.Payload)
}

func (o *GetGlobalMessagesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGlobalMessagesUnauthorized creates a GetGlobalMessagesUnauthorized with default headers values
func NewGetGlobalMessagesUnauthorized() *GetGlobalMessagesUnauthorized {
	return &GetGlobalMessagesUnauthorized{}
}

/*GetGlobalMessagesUnauthorized handles this case with default header values.

Session required
*/
type GetGlobalMessagesUnauthorized struct {
	Payload *models.APIError
}

func (o *GetGlobalMessagesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/messages][%d] getGlobalMessagesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGlobalMessagesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGlobalMessagesForbidden creates a GetGlobalMessagesForbidden with default headers values
func NewGetGlobalMessagesForbidden() *GetGlobalMessagesForbidden {
	return &GetGlobalMessagesForbidden{}
}

/*GetGlobalMessagesForbidden handles this case with default header values.

Unauthorized access
*/
type GetGlobalMessagesForbidden struct {
	Payload *models.APIError
}

func (o *GetGlobalMessagesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/messages][%d] getGlobalMessagesForbidden  %+v", 403, o.Payload)
}

func (o *GetGlobalMessagesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGlobalMessagesNotFound creates a GetGlobalMessagesNotFound with default headers values
func NewGetGlobalMessagesNotFound() *GetGlobalMessagesNotFound {
	return &GetGlobalMessagesNotFound{}
}

/*GetGlobalMessagesNotFound handles this case with default header values.

Not found
*/
type GetGlobalMessagesNotFound struct {
	Payload *models.APIError
}

func (o *GetGlobalMessagesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/messages][%d] getGlobalMessagesNotFound  %+v", 404, o.Payload)
}

func (o *GetGlobalMessagesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
