// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/dlespiau/quay-exporter/pkg/models"
)

// ListStarredReposReader is a Reader for the ListStarredRepos structure.
type ListStarredReposReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListStarredReposReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListStarredReposOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListStarredReposBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewListStarredReposUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListStarredReposForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListStarredReposNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListStarredReposOK creates a ListStarredReposOK with default headers values
func NewListStarredReposOK() *ListStarredReposOK {
	return &ListStarredReposOK{}
}

/*ListStarredReposOK handles this case with default header values.

Successful invocation
*/
type ListStarredReposOK struct {
}

func (o *ListStarredReposOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/user/starred][%d] listStarredReposOK ", 200)
}

func (o *ListStarredReposOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListStarredReposBadRequest creates a ListStarredReposBadRequest with default headers values
func NewListStarredReposBadRequest() *ListStarredReposBadRequest {
	return &ListStarredReposBadRequest{}
}

/*ListStarredReposBadRequest handles this case with default header values.

Bad Request
*/
type ListStarredReposBadRequest struct {
	Payload *models.APIError
}

func (o *ListStarredReposBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1/user/starred][%d] listStarredReposBadRequest  %+v", 400, o.Payload)
}

func (o *ListStarredReposBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListStarredReposUnauthorized creates a ListStarredReposUnauthorized with default headers values
func NewListStarredReposUnauthorized() *ListStarredReposUnauthorized {
	return &ListStarredReposUnauthorized{}
}

/*ListStarredReposUnauthorized handles this case with default header values.

Session required
*/
type ListStarredReposUnauthorized struct {
	Payload *models.APIError
}

func (o *ListStarredReposUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/user/starred][%d] listStarredReposUnauthorized  %+v", 401, o.Payload)
}

func (o *ListStarredReposUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListStarredReposForbidden creates a ListStarredReposForbidden with default headers values
func NewListStarredReposForbidden() *ListStarredReposForbidden {
	return &ListStarredReposForbidden{}
}

/*ListStarredReposForbidden handles this case with default header values.

Unauthorized access
*/
type ListStarredReposForbidden struct {
	Payload *models.APIError
}

func (o *ListStarredReposForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/user/starred][%d] listStarredReposForbidden  %+v", 403, o.Payload)
}

func (o *ListStarredReposForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListStarredReposNotFound creates a ListStarredReposNotFound with default headers values
func NewListStarredReposNotFound() *ListStarredReposNotFound {
	return &ListStarredReposNotFound{}
}

/*ListStarredReposNotFound handles this case with default header values.

Not found
*/
type ListStarredReposNotFound struct {
	Payload *models.APIError
}

func (o *ListStarredReposNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/user/starred][%d] listStarredReposNotFound  %+v", 404, o.Payload)
}

func (o *ListStarredReposNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
