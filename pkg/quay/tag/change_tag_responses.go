// Code generated by go-swagger; DO NOT EDIT.

package tag

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/dlespiau/quay-exporter/pkg/models"
)

// ChangeTagReader is a Reader for the ChangeTag structure.
type ChangeTagReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ChangeTagReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewChangeTagOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewChangeTagBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewChangeTagUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewChangeTagForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewChangeTagNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewChangeTagOK creates a ChangeTagOK with default headers values
func NewChangeTagOK() *ChangeTagOK {
	return &ChangeTagOK{}
}

/*ChangeTagOK handles this case with default header values.

Successful invocation
*/
type ChangeTagOK struct {
}

func (o *ChangeTagOK) Error() string {
	return fmt.Sprintf("[PUT /api/v1/repository/{repository}/tag/{tag}][%d] changeTagOK ", 200)
}

func (o *ChangeTagOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewChangeTagBadRequest creates a ChangeTagBadRequest with default headers values
func NewChangeTagBadRequest() *ChangeTagBadRequest {
	return &ChangeTagBadRequest{}
}

/*ChangeTagBadRequest handles this case with default header values.

Bad Request
*/
type ChangeTagBadRequest struct {
	Payload *models.APIError
}

func (o *ChangeTagBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v1/repository/{repository}/tag/{tag}][%d] changeTagBadRequest  %+v", 400, o.Payload)
}

func (o *ChangeTagBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChangeTagUnauthorized creates a ChangeTagUnauthorized with default headers values
func NewChangeTagUnauthorized() *ChangeTagUnauthorized {
	return &ChangeTagUnauthorized{}
}

/*ChangeTagUnauthorized handles this case with default header values.

Session required
*/
type ChangeTagUnauthorized struct {
	Payload *models.APIError
}

func (o *ChangeTagUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v1/repository/{repository}/tag/{tag}][%d] changeTagUnauthorized  %+v", 401, o.Payload)
}

func (o *ChangeTagUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChangeTagForbidden creates a ChangeTagForbidden with default headers values
func NewChangeTagForbidden() *ChangeTagForbidden {
	return &ChangeTagForbidden{}
}

/*ChangeTagForbidden handles this case with default header values.

Unauthorized access
*/
type ChangeTagForbidden struct {
	Payload *models.APIError
}

func (o *ChangeTagForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v1/repository/{repository}/tag/{tag}][%d] changeTagForbidden  %+v", 403, o.Payload)
}

func (o *ChangeTagForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChangeTagNotFound creates a ChangeTagNotFound with default headers values
func NewChangeTagNotFound() *ChangeTagNotFound {
	return &ChangeTagNotFound{}
}

/*ChangeTagNotFound handles this case with default header values.

Not found
*/
type ChangeTagNotFound struct {
	Payload *models.APIError
}

func (o *ChangeTagNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v1/repository/{repository}/tag/{tag}][%d] changeTagNotFound  %+v", 404, o.Payload)
}

func (o *ChangeTagNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
