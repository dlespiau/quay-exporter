// Code generated by go-swagger; DO NOT EDIT.

package tag

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewListRepoTagsParams creates a new ListRepoTagsParams object
// with the default values initialized.
func NewListRepoTagsParams() *ListRepoTagsParams {
	var ()
	return &ListRepoTagsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewListRepoTagsParamsWithTimeout creates a new ListRepoTagsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewListRepoTagsParamsWithTimeout(timeout time.Duration) *ListRepoTagsParams {
	var ()
	return &ListRepoTagsParams{

		timeout: timeout,
	}
}

// NewListRepoTagsParamsWithContext creates a new ListRepoTagsParams object
// with the default values initialized, and the ability to set a context for a request
func NewListRepoTagsParamsWithContext(ctx context.Context) *ListRepoTagsParams {
	var ()
	return &ListRepoTagsParams{

		Context: ctx,
	}
}

// NewListRepoTagsParamsWithHTTPClient creates a new ListRepoTagsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewListRepoTagsParamsWithHTTPClient(client *http.Client) *ListRepoTagsParams {
	var ()
	return &ListRepoTagsParams{
		HTTPClient: client,
	}
}

/*ListRepoTagsParams contains all the parameters to send to the API endpoint
for the list repo tags operation typically these are written to a http.Request
*/
type ListRepoTagsParams struct {

	/*Limit
	  Limit to the number of results to return per page. Max 100.

	*/
	Limit *int64
	/*Page
	  Page index for the results. Default 1.

	*/
	Page *int64
	/*Repository
	  The full path of the repository. e.g. namespace/name

	*/
	Repository string
	/*SpecificTag
	  Filters the tags to the specific tag.

	*/
	SpecificTag *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the list repo tags params
func (o *ListRepoTagsParams) WithTimeout(timeout time.Duration) *ListRepoTagsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list repo tags params
func (o *ListRepoTagsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list repo tags params
func (o *ListRepoTagsParams) WithContext(ctx context.Context) *ListRepoTagsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list repo tags params
func (o *ListRepoTagsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list repo tags params
func (o *ListRepoTagsParams) WithHTTPClient(client *http.Client) *ListRepoTagsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list repo tags params
func (o *ListRepoTagsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLimit adds the limit to the list repo tags params
func (o *ListRepoTagsParams) WithLimit(limit *int64) *ListRepoTagsParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the list repo tags params
func (o *ListRepoTagsParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WithPage adds the page to the list repo tags params
func (o *ListRepoTagsParams) WithPage(page *int64) *ListRepoTagsParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the list repo tags params
func (o *ListRepoTagsParams) SetPage(page *int64) {
	o.Page = page
}

// WithRepository adds the repository to the list repo tags params
func (o *ListRepoTagsParams) WithRepository(repository string) *ListRepoTagsParams {
	o.SetRepository(repository)
	return o
}

// SetRepository adds the repository to the list repo tags params
func (o *ListRepoTagsParams) SetRepository(repository string) {
	o.Repository = repository
}

// WithSpecificTag adds the specificTag to the list repo tags params
func (o *ListRepoTagsParams) WithSpecificTag(specificTag *string) *ListRepoTagsParams {
	o.SetSpecificTag(specificTag)
	return o
}

// SetSpecificTag adds the specificTag to the list repo tags params
func (o *ListRepoTagsParams) SetSpecificTag(specificTag *string) {
	o.SpecificTag = specificTag
}

// WriteToRequest writes these params to a swagger request
func (o *ListRepoTagsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Limit != nil {

		// query param limit
		var qrLimit int64
		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {
			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}

	}

	if o.Page != nil {

		// query param page
		var qrPage int64
		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatInt64(qrPage)
		if qPage != "" {
			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}

	}

	// path param repository
	if err := r.SetPathParam("repository", o.Repository); err != nil {
		return err
	}

	if o.SpecificTag != nil {

		// query param specificTag
		var qrSpecificTag string
		if o.SpecificTag != nil {
			qrSpecificTag = *o.SpecificTag
		}
		qSpecificTag := qrSpecificTag
		if qSpecificTag != "" {
			if err := r.SetQueryParam("specificTag", qSpecificTag); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
