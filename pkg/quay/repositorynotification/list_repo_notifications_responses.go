// Code generated by go-swagger; DO NOT EDIT.

package repositorynotification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/dlespiau/quay-exporter/pkg/models"
)

// ListRepoNotificationsReader is a Reader for the ListRepoNotifications structure.
type ListRepoNotificationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListRepoNotificationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListRepoNotificationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListRepoNotificationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewListRepoNotificationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListRepoNotificationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListRepoNotificationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListRepoNotificationsOK creates a ListRepoNotificationsOK with default headers values
func NewListRepoNotificationsOK() *ListRepoNotificationsOK {
	return &ListRepoNotificationsOK{}
}

/*ListRepoNotificationsOK handles this case with default header values.

Successful invocation
*/
type ListRepoNotificationsOK struct {
}

func (o *ListRepoNotificationsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/notification/][%d] listRepoNotificationsOK ", 200)
}

func (o *ListRepoNotificationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListRepoNotificationsBadRequest creates a ListRepoNotificationsBadRequest with default headers values
func NewListRepoNotificationsBadRequest() *ListRepoNotificationsBadRequest {
	return &ListRepoNotificationsBadRequest{}
}

/*ListRepoNotificationsBadRequest handles this case with default header values.

Bad Request
*/
type ListRepoNotificationsBadRequest struct {
	Payload *models.APIError
}

func (o *ListRepoNotificationsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/notification/][%d] listRepoNotificationsBadRequest  %+v", 400, o.Payload)
}

func (o *ListRepoNotificationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRepoNotificationsUnauthorized creates a ListRepoNotificationsUnauthorized with default headers values
func NewListRepoNotificationsUnauthorized() *ListRepoNotificationsUnauthorized {
	return &ListRepoNotificationsUnauthorized{}
}

/*ListRepoNotificationsUnauthorized handles this case with default header values.

Session required
*/
type ListRepoNotificationsUnauthorized struct {
	Payload *models.APIError
}

func (o *ListRepoNotificationsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/notification/][%d] listRepoNotificationsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListRepoNotificationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRepoNotificationsForbidden creates a ListRepoNotificationsForbidden with default headers values
func NewListRepoNotificationsForbidden() *ListRepoNotificationsForbidden {
	return &ListRepoNotificationsForbidden{}
}

/*ListRepoNotificationsForbidden handles this case with default header values.

Unauthorized access
*/
type ListRepoNotificationsForbidden struct {
	Payload *models.APIError
}

func (o *ListRepoNotificationsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/notification/][%d] listRepoNotificationsForbidden  %+v", 403, o.Payload)
}

func (o *ListRepoNotificationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRepoNotificationsNotFound creates a ListRepoNotificationsNotFound with default headers values
func NewListRepoNotificationsNotFound() *ListRepoNotificationsNotFound {
	return &ListRepoNotificationsNotFound{}
}

/*ListRepoNotificationsNotFound handles this case with default header values.

Not found
*/
type ListRepoNotificationsNotFound struct {
	Payload *models.APIError
}

func (o *ListRepoNotificationsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/notification/][%d] listRepoNotificationsNotFound  %+v", 404, o.Payload)
}

func (o *ListRepoNotificationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
