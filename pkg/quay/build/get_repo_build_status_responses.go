// Code generated by go-swagger; DO NOT EDIT.

package build

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/dlespiau/quay-exporter/pkg/models"
)

// GetRepoBuildStatusReader is a Reader for the GetRepoBuildStatus structure.
type GetRepoBuildStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRepoBuildStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetRepoBuildStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetRepoBuildStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetRepoBuildStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetRepoBuildStatusForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetRepoBuildStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetRepoBuildStatusOK creates a GetRepoBuildStatusOK with default headers values
func NewGetRepoBuildStatusOK() *GetRepoBuildStatusOK {
	return &GetRepoBuildStatusOK{}
}

/*GetRepoBuildStatusOK handles this case with default header values.

Successful invocation
*/
type GetRepoBuildStatusOK struct {
}

func (o *GetRepoBuildStatusOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/build/{build_uuid}/status][%d] getRepoBuildStatusOK ", 200)
}

func (o *GetRepoBuildStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRepoBuildStatusBadRequest creates a GetRepoBuildStatusBadRequest with default headers values
func NewGetRepoBuildStatusBadRequest() *GetRepoBuildStatusBadRequest {
	return &GetRepoBuildStatusBadRequest{}
}

/*GetRepoBuildStatusBadRequest handles this case with default header values.

Bad Request
*/
type GetRepoBuildStatusBadRequest struct {
	Payload *models.APIError
}

func (o *GetRepoBuildStatusBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/build/{build_uuid}/status][%d] getRepoBuildStatusBadRequest  %+v", 400, o.Payload)
}

func (o *GetRepoBuildStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRepoBuildStatusUnauthorized creates a GetRepoBuildStatusUnauthorized with default headers values
func NewGetRepoBuildStatusUnauthorized() *GetRepoBuildStatusUnauthorized {
	return &GetRepoBuildStatusUnauthorized{}
}

/*GetRepoBuildStatusUnauthorized handles this case with default header values.

Session required
*/
type GetRepoBuildStatusUnauthorized struct {
	Payload *models.APIError
}

func (o *GetRepoBuildStatusUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/build/{build_uuid}/status][%d] getRepoBuildStatusUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRepoBuildStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRepoBuildStatusForbidden creates a GetRepoBuildStatusForbidden with default headers values
func NewGetRepoBuildStatusForbidden() *GetRepoBuildStatusForbidden {
	return &GetRepoBuildStatusForbidden{}
}

/*GetRepoBuildStatusForbidden handles this case with default header values.

Unauthorized access
*/
type GetRepoBuildStatusForbidden struct {
	Payload *models.APIError
}

func (o *GetRepoBuildStatusForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/build/{build_uuid}/status][%d] getRepoBuildStatusForbidden  %+v", 403, o.Payload)
}

func (o *GetRepoBuildStatusForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRepoBuildStatusNotFound creates a GetRepoBuildStatusNotFound with default headers values
func NewGetRepoBuildStatusNotFound() *GetRepoBuildStatusNotFound {
	return &GetRepoBuildStatusNotFound{}
}

/*GetRepoBuildStatusNotFound handles this case with default header values.

Not found
*/
type GetRepoBuildStatusNotFound struct {
	Payload *models.APIError
}

func (o *GetRepoBuildStatusNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/build/{build_uuid}/status][%d] getRepoBuildStatusNotFound  %+v", 404, o.Payload)
}

func (o *GetRepoBuildStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
