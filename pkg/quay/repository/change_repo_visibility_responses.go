// Code generated by go-swagger; DO NOT EDIT.

package repository

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/dlespiau/quay-exporter/pkg/models"
)

// ChangeRepoVisibilityReader is a Reader for the ChangeRepoVisibility structure.
type ChangeRepoVisibilityReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ChangeRepoVisibilityReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewChangeRepoVisibilityCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewChangeRepoVisibilityBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewChangeRepoVisibilityUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewChangeRepoVisibilityForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewChangeRepoVisibilityNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewChangeRepoVisibilityCreated creates a ChangeRepoVisibilityCreated with default headers values
func NewChangeRepoVisibilityCreated() *ChangeRepoVisibilityCreated {
	return &ChangeRepoVisibilityCreated{}
}

/*ChangeRepoVisibilityCreated handles this case with default header values.

Successful creation
*/
type ChangeRepoVisibilityCreated struct {
}

func (o *ChangeRepoVisibilityCreated) Error() string {
	return fmt.Sprintf("[POST /api/v1/repository/{repository}/changevisibility][%d] changeRepoVisibilityCreated ", 201)
}

func (o *ChangeRepoVisibilityCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewChangeRepoVisibilityBadRequest creates a ChangeRepoVisibilityBadRequest with default headers values
func NewChangeRepoVisibilityBadRequest() *ChangeRepoVisibilityBadRequest {
	return &ChangeRepoVisibilityBadRequest{}
}

/*ChangeRepoVisibilityBadRequest handles this case with default header values.

Bad Request
*/
type ChangeRepoVisibilityBadRequest struct {
	Payload *models.APIError
}

func (o *ChangeRepoVisibilityBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/repository/{repository}/changevisibility][%d] changeRepoVisibilityBadRequest  %+v", 400, o.Payload)
}

func (o *ChangeRepoVisibilityBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChangeRepoVisibilityUnauthorized creates a ChangeRepoVisibilityUnauthorized with default headers values
func NewChangeRepoVisibilityUnauthorized() *ChangeRepoVisibilityUnauthorized {
	return &ChangeRepoVisibilityUnauthorized{}
}

/*ChangeRepoVisibilityUnauthorized handles this case with default header values.

Session required
*/
type ChangeRepoVisibilityUnauthorized struct {
	Payload *models.APIError
}

func (o *ChangeRepoVisibilityUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1/repository/{repository}/changevisibility][%d] changeRepoVisibilityUnauthorized  %+v", 401, o.Payload)
}

func (o *ChangeRepoVisibilityUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChangeRepoVisibilityForbidden creates a ChangeRepoVisibilityForbidden with default headers values
func NewChangeRepoVisibilityForbidden() *ChangeRepoVisibilityForbidden {
	return &ChangeRepoVisibilityForbidden{}
}

/*ChangeRepoVisibilityForbidden handles this case with default header values.

Unauthorized access
*/
type ChangeRepoVisibilityForbidden struct {
	Payload *models.APIError
}

func (o *ChangeRepoVisibilityForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/repository/{repository}/changevisibility][%d] changeRepoVisibilityForbidden  %+v", 403, o.Payload)
}

func (o *ChangeRepoVisibilityForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChangeRepoVisibilityNotFound creates a ChangeRepoVisibilityNotFound with default headers values
func NewChangeRepoVisibilityNotFound() *ChangeRepoVisibilityNotFound {
	return &ChangeRepoVisibilityNotFound{}
}

/*ChangeRepoVisibilityNotFound handles this case with default header values.

Not found
*/
type ChangeRepoVisibilityNotFound struct {
	Payload *models.APIError
}

func (o *ChangeRepoVisibilityNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/repository/{repository}/changevisibility][%d] changeRepoVisibilityNotFound  %+v", 404, o.Payload)
}

func (o *ChangeRepoVisibilityNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
