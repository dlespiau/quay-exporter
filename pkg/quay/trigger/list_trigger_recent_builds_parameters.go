// Code generated by go-swagger; DO NOT EDIT.

package trigger

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewListTriggerRecentBuildsParams creates a new ListTriggerRecentBuildsParams object
// with the default values initialized.
func NewListTriggerRecentBuildsParams() *ListTriggerRecentBuildsParams {
	var ()
	return &ListTriggerRecentBuildsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewListTriggerRecentBuildsParamsWithTimeout creates a new ListTriggerRecentBuildsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewListTriggerRecentBuildsParamsWithTimeout(timeout time.Duration) *ListTriggerRecentBuildsParams {
	var ()
	return &ListTriggerRecentBuildsParams{

		timeout: timeout,
	}
}

// NewListTriggerRecentBuildsParamsWithContext creates a new ListTriggerRecentBuildsParams object
// with the default values initialized, and the ability to set a context for a request
func NewListTriggerRecentBuildsParamsWithContext(ctx context.Context) *ListTriggerRecentBuildsParams {
	var ()
	return &ListTriggerRecentBuildsParams{

		Context: ctx,
	}
}

// NewListTriggerRecentBuildsParamsWithHTTPClient creates a new ListTriggerRecentBuildsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewListTriggerRecentBuildsParamsWithHTTPClient(client *http.Client) *ListTriggerRecentBuildsParams {
	var ()
	return &ListTriggerRecentBuildsParams{
		HTTPClient: client,
	}
}

/*ListTriggerRecentBuildsParams contains all the parameters to send to the API endpoint
for the list trigger recent builds operation typically these are written to a http.Request
*/
type ListTriggerRecentBuildsParams struct {

	/*Limit
	  The maximum number of builds to return

	*/
	Limit *int64
	/*Repository
	  The full path of the repository. e.g. namespace/name

	*/
	Repository string
	/*TriggerUUID
	  The UUID of the build trigger

	*/
	TriggerUUID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the list trigger recent builds params
func (o *ListTriggerRecentBuildsParams) WithTimeout(timeout time.Duration) *ListTriggerRecentBuildsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list trigger recent builds params
func (o *ListTriggerRecentBuildsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list trigger recent builds params
func (o *ListTriggerRecentBuildsParams) WithContext(ctx context.Context) *ListTriggerRecentBuildsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list trigger recent builds params
func (o *ListTriggerRecentBuildsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list trigger recent builds params
func (o *ListTriggerRecentBuildsParams) WithHTTPClient(client *http.Client) *ListTriggerRecentBuildsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list trigger recent builds params
func (o *ListTriggerRecentBuildsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLimit adds the limit to the list trigger recent builds params
func (o *ListTriggerRecentBuildsParams) WithLimit(limit *int64) *ListTriggerRecentBuildsParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the list trigger recent builds params
func (o *ListTriggerRecentBuildsParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WithRepository adds the repository to the list trigger recent builds params
func (o *ListTriggerRecentBuildsParams) WithRepository(repository string) *ListTriggerRecentBuildsParams {
	o.SetRepository(repository)
	return o
}

// SetRepository adds the repository to the list trigger recent builds params
func (o *ListTriggerRecentBuildsParams) SetRepository(repository string) {
	o.Repository = repository
}

// WithTriggerUUID adds the triggerUUID to the list trigger recent builds params
func (o *ListTriggerRecentBuildsParams) WithTriggerUUID(triggerUUID string) *ListTriggerRecentBuildsParams {
	o.SetTriggerUUID(triggerUUID)
	return o
}

// SetTriggerUUID adds the triggerUuid to the list trigger recent builds params
func (o *ListTriggerRecentBuildsParams) SetTriggerUUID(triggerUUID string) {
	o.TriggerUUID = triggerUUID
}

// WriteToRequest writes these params to a swagger request
func (o *ListTriggerRecentBuildsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Limit != nil {

		// query param limit
		var qrLimit int64
		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {
			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}

	}

	// path param repository
	if err := r.SetPathParam("repository", o.Repository); err != nil {
		return err
	}

	// path param trigger_uuid
	if err := r.SetPathParam("trigger_uuid", o.TriggerUUID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
