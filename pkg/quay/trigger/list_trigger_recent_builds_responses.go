// Code generated by go-swagger; DO NOT EDIT.

package trigger

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/dlespiau/quay-exporter/pkg/models"
)

// ListTriggerRecentBuildsReader is a Reader for the ListTriggerRecentBuilds structure.
type ListTriggerRecentBuildsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListTriggerRecentBuildsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListTriggerRecentBuildsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListTriggerRecentBuildsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewListTriggerRecentBuildsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListTriggerRecentBuildsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListTriggerRecentBuildsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListTriggerRecentBuildsOK creates a ListTriggerRecentBuildsOK with default headers values
func NewListTriggerRecentBuildsOK() *ListTriggerRecentBuildsOK {
	return &ListTriggerRecentBuildsOK{}
}

/*ListTriggerRecentBuildsOK handles this case with default header values.

Successful invocation
*/
type ListTriggerRecentBuildsOK struct {
}

func (o *ListTriggerRecentBuildsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/trigger/{trigger_uuid}/builds][%d] listTriggerRecentBuildsOK ", 200)
}

func (o *ListTriggerRecentBuildsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListTriggerRecentBuildsBadRequest creates a ListTriggerRecentBuildsBadRequest with default headers values
func NewListTriggerRecentBuildsBadRequest() *ListTriggerRecentBuildsBadRequest {
	return &ListTriggerRecentBuildsBadRequest{}
}

/*ListTriggerRecentBuildsBadRequest handles this case with default header values.

Bad Request
*/
type ListTriggerRecentBuildsBadRequest struct {
	Payload *models.APIError
}

func (o *ListTriggerRecentBuildsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/trigger/{trigger_uuid}/builds][%d] listTriggerRecentBuildsBadRequest  %+v", 400, o.Payload)
}

func (o *ListTriggerRecentBuildsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTriggerRecentBuildsUnauthorized creates a ListTriggerRecentBuildsUnauthorized with default headers values
func NewListTriggerRecentBuildsUnauthorized() *ListTriggerRecentBuildsUnauthorized {
	return &ListTriggerRecentBuildsUnauthorized{}
}

/*ListTriggerRecentBuildsUnauthorized handles this case with default header values.

Session required
*/
type ListTriggerRecentBuildsUnauthorized struct {
	Payload *models.APIError
}

func (o *ListTriggerRecentBuildsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/trigger/{trigger_uuid}/builds][%d] listTriggerRecentBuildsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListTriggerRecentBuildsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTriggerRecentBuildsForbidden creates a ListTriggerRecentBuildsForbidden with default headers values
func NewListTriggerRecentBuildsForbidden() *ListTriggerRecentBuildsForbidden {
	return &ListTriggerRecentBuildsForbidden{}
}

/*ListTriggerRecentBuildsForbidden handles this case with default header values.

Unauthorized access
*/
type ListTriggerRecentBuildsForbidden struct {
	Payload *models.APIError
}

func (o *ListTriggerRecentBuildsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/trigger/{trigger_uuid}/builds][%d] listTriggerRecentBuildsForbidden  %+v", 403, o.Payload)
}

func (o *ListTriggerRecentBuildsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTriggerRecentBuildsNotFound creates a ListTriggerRecentBuildsNotFound with default headers values
func NewListTriggerRecentBuildsNotFound() *ListTriggerRecentBuildsNotFound {
	return &ListTriggerRecentBuildsNotFound{}
}

/*ListTriggerRecentBuildsNotFound handles this case with default header values.

Not found
*/
type ListTriggerRecentBuildsNotFound struct {
	Payload *models.APIError
}

func (o *ListTriggerRecentBuildsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/trigger/{trigger_uuid}/builds][%d] listTriggerRecentBuildsNotFound  %+v", 404, o.Payload)
}

func (o *ListTriggerRecentBuildsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
